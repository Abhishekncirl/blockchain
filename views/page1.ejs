<%- include partials/header.ejs %>

<body onload="connectMetamask(),connectContract()">
    <div class="container">
        <div class="row mt-5">
            <div class="col-md-6 offset-md-3">
                <div id="readArea" class="text-center">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png" alt="MetaMask Logo" style="width: 100px; height: 100px;">
                    <h2 class="mt-3">Connected to MetaMask</h2>
                    <p id="userArea" class="mt-3 text-muted">Status: Not connected to MetaMask</p>
                </div>
            </div>
        </div>
    <div class="container">
        <form action="/" method="post">
          <div class="form-group">
            <label for="name">Enter the vegetable Name</label>
            <input type="text" id="vegInput"class="form-control" name="name" placeholder="Enter Your Name">
        </div>
        
        </form>
      </div>

      <button class="btn btn-success" onclick="addVegetable()">Submit</button>
      <button class="btn btn-success" onclick="getVegetable()">get vegi</button>
      <div id="showVegi"></div>

      <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
<script>
        
    let account;
    const connectMetamask = async () => {
        if(window.ethereum !== "underfined"){
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            account = accounts[0];
            document.getElementById("userArea").innerHTML = `User Account: ${account}`;
        }
    }

    const connectContract = async () => {
            const ABI = [
	{
		"constant": false,
		"inputs": [
			{
				"name": "_name",
				"type": "string"
			}
		],
		"name": "setVegitable",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "getVegitable",
		"outputs": [
			{
				"name": "retName",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "vegi",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
];
            
            const Address = "0xAAE3c8164341733B6788e50F4EC972fbE3A9F18F"; // Taking Address from Remix 
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
        }

        const addVegetable = async () => {
            const vegi = document.getElementById("vegInput").value;
            await window.contract.methods.setVegitable(vegi).send({from: account});
        }
        const getVegetable = async () => {
            const vegi = await window.contract.methods.getVegitable().call();
            document.getElementById("showVegi").innerHTML = `Added vegetable name: ${vegi}`;

        }
</script>
</body>